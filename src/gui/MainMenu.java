/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.TreeSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import misc.DataModel;
import misc.SuperCheckers;
import supercheckers.game.ComputerPlayer;
import supercheckers.game.HumanPlayer;
import supercheckers.game.Player;

/**
 *
 * @author Hamza Ali
 */
public final class MainMenu extends javax.swing.JFrame {

    //holds data on all players
    private TreeSet<Player> players;
    
    //file to which rankings are saved
    private final File datFile = new File("./dat/playerrankings.dat");
    
    //object data is saved to
    private DataModel dm;
    
    //temp variable for menu interactions
    private HumanPlayer currentUser;
    
    /*temp variable used to determine purpose for login:
    0 = new player (only used by loginwindowclosed actionlistener)
    1 = change username
    2 = change password
    3 = pvp
    4 = vs com
    5 = pvp player 2 */
    private int loginPurpose = -1;
    
    //second player for pvp match
    private HumanPlayer p2;
    
    /**
     * Creates new form MainMenu
     */
    public MainMenu() {
        players = new TreeSet();
        
        file2data();
        //fakeData(); //debug only
        
        initComponents();
        
        Font temp = label_title.getFont();
        label_title.setFont(temp.deriveFont(Font.BOLD, temp.getSize() * 2));
        
        this.setLocation((Toolkit.getDefaultToolkit().getScreenSize().width/3)-100, (Toolkit.getDefaultToolkit().getScreenSize().height/3)-100);
        this.setResizable(false);
        
        label_p2.setVisible(false); //for login purpose 5 only
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LoginPage = new javax.swing.JDialog();
        panel_login = new javax.swing.JPanel();
        button_login = new javax.swing.JButton();
        label_usernameLogin = new javax.swing.JLabel();
        button_signup = new javax.swing.JButton();
        label_passwordLogin = new javax.swing.JLabel();
        textField_username = new javax.swing.JTextField();
        textField_password = new javax.swing.JTextField();
        label_p2 = new javax.swing.JLabel();
        Leaderboards = new javax.swing.JDialog();
        panel_leaderboards = new javax.swing.JPanel();
        scrollPane_leaderboards = new javax.swing.JScrollPane();
        table_leaderboards = new javax.swing.JTable();
        label_leaderboards = new javax.swing.JLabel();
        Options = new javax.swing.JDialog();
        panel_options = new javax.swing.JPanel();
        button_changeName = new javax.swing.JButton();
        button_changePassword = new javax.swing.JButton();
        label_options = new javax.swing.JLabel();
        button_newPlayer = new javax.swing.JButton();
        textField_options = new javax.swing.JTextField();
        label_help = new javax.swing.JLabel();
        PlayMenu = new javax.swing.JDialog();
        panel_play = new javax.swing.JPanel();
        button_pvp = new javax.swing.JButton();
        button_com = new javax.swing.JButton();
        label_com = new javax.swing.JLabel();
        label_pvp = new javax.swing.JLabel();
        label_play = new javax.swing.JLabel();
        panel_main = new javax.swing.JPanel();
        button_play = new javax.swing.JButton();
        button_leaderboards = new javax.swing.JButton();
        button_options = new javax.swing.JButton();
        label_title = new javax.swing.JLabel();

        LoginPage.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                LoginPageWindowClosing(evt);
            }
        });

        button_login.setText("Login");
        button_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_loginActionPerformed(evt);
            }
        });

        label_usernameLogin.setText("Username");

        button_signup.setText("Sign Up");
        button_signup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_signupActionPerformed(evt);
            }
        });

        label_passwordLogin.setText("Password");

        label_p2.setText("Player Two Login/Sign Up");

        javax.swing.GroupLayout panel_loginLayout = new javax.swing.GroupLayout(panel_login);
        panel_login.setLayout(panel_loginLayout);
        panel_loginLayout.setHorizontalGroup(
            panel_loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_loginLayout.createSequentialGroup()
                .addGroup(panel_loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_loginLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(panel_loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panel_loginLayout.createSequentialGroup()
                                .addComponent(button_login, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button_signup, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel_loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(textField_username, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(label_usernameLogin)
                                .addComponent(label_passwordLogin)
                                .addComponent(textField_password, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(panel_loginLayout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(label_p2)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        panel_loginLayout.setVerticalGroup(
            panel_loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_loginLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(label_p2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(label_usernameLogin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textField_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(label_passwordLogin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textField_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(panel_loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_signup)
                    .addComponent(button_login))
                .addGap(33, 33, 33))
        );

        javax.swing.GroupLayout LoginPageLayout = new javax.swing.GroupLayout(LoginPage.getContentPane());
        LoginPage.getContentPane().setLayout(LoginPageLayout);
        LoginPageLayout.setHorizontalGroup(
            LoginPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_login, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        LoginPageLayout.setVerticalGroup(
            LoginPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_login, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        Leaderboards.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                LeaderboardsWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                LeaderboardsWindowClosing(evt);
            }
        });

        table_leaderboards.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Rank", "Player", "Points?!?!"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_leaderboards.getTableHeader().setReorderingAllowed(false);
        scrollPane_leaderboards.setViewportView(table_leaderboards);

        label_leaderboards.setText("Leaderboards");

        javax.swing.GroupLayout panel_leaderboardsLayout = new javax.swing.GroupLayout(panel_leaderboards);
        panel_leaderboards.setLayout(panel_leaderboardsLayout);
        panel_leaderboardsLayout.setHorizontalGroup(
            panel_leaderboardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPane_leaderboards, javax.swing.GroupLayout.DEFAULT_SIZE, 408, Short.MAX_VALUE)
            .addGroup(panel_leaderboardsLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(label_leaderboards)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel_leaderboardsLayout.setVerticalGroup(
            panel_leaderboardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_leaderboardsLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(label_leaderboards)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrollPane_leaderboards, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout LeaderboardsLayout = new javax.swing.GroupLayout(Leaderboards.getContentPane());
        Leaderboards.getContentPane().setLayout(LeaderboardsLayout);
        LeaderboardsLayout.setHorizontalGroup(
            LeaderboardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LeaderboardsLayout.createSequentialGroup()
                .addComponent(panel_leaderboards, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        LeaderboardsLayout.setVerticalGroup(
            LeaderboardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_leaderboards, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        Options.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                OptionsWindowClosing(evt);
            }
        });

        button_changeName.setText("Change Username");
        button_changeName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_changeNameActionPerformed(evt);
            }
        });

        button_changePassword.setText("Change Password");
        button_changePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_changePasswordActionPerformed(evt);
            }
        });

        label_options.setText("Options");

        button_newPlayer.setText("Create New Player");
        button_newPlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_newPlayerActionPerformed(evt);
            }
        });

        label_help.setText("Enter New Username/Password Here");

        javax.swing.GroupLayout panel_optionsLayout = new javax.swing.GroupLayout(panel_options);
        panel_options.setLayout(panel_optionsLayout);
        panel_optionsLayout.setHorizontalGroup(
            panel_optionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_optionsLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(panel_optionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button_newPlayer)
                    .addGroup(panel_optionsLayout.createSequentialGroup()
                        .addGroup(panel_optionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label_options)
                            .addComponent(button_changeName)
                            .addComponent(button_changePassword))
                        .addGap(18, 18, 18)
                        .addGroup(panel_optionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textField_options)
                            .addComponent(label_help, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        panel_optionsLayout.setVerticalGroup(
            panel_optionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_optionsLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(label_options)
                .addGroup(panel_optionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_optionsLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(panel_optionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(button_changeName)
                            .addComponent(label_help))
                        .addGap(18, 18, 18)
                        .addComponent(button_changePassword))
                    .addGroup(panel_optionsLayout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(textField_options, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(button_newPlayer)
                .addContainerGap(98, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout OptionsLayout = new javax.swing.GroupLayout(Options.getContentPane());
        Options.getContentPane().setLayout(OptionsLayout);
        OptionsLayout.setHorizontalGroup(
            OptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_options, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        OptionsLayout.setVerticalGroup(
            OptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_options, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        PlayMenu.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                PlayMenuWindowClosing(evt);
            }
        });

        button_pvp.setText("PvP");
        button_pvp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_pvpActionPerformed(evt);
            }
        });

        button_com.setText("Vs. Computer");
        button_com.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_comActionPerformed(evt);
            }
        });

        label_com.setText("Hone your skills in a friendly match against the computer!");

        label_pvp.setText("Test your might against another player to increase your rank!");

        label_play.setText("Play a Match");

        javax.swing.GroupLayout panel_playLayout = new javax.swing.GroupLayout(panel_play);
        panel_play.setLayout(panel_playLayout);
        panel_playLayout.setHorizontalGroup(
            panel_playLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_playLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(panel_playLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label_pvp, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
                    .addGroup(panel_playLayout.createSequentialGroup()
                        .addGroup(panel_playLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(button_com, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button_pvp, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(label_com, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(panel_playLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(label_play)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel_playLayout.setVerticalGroup(
            panel_playLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_playLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(label_play)
                .addGap(34, 34, 34)
                .addComponent(button_pvp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label_pvp)
                .addGap(45, 45, 45)
                .addComponent(button_com)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label_com)
                .addContainerGap(76, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PlayMenuLayout = new javax.swing.GroupLayout(PlayMenu.getContentPane());
        PlayMenu.getContentPane().setLayout(PlayMenuLayout);
        PlayMenuLayout.setHorizontalGroup(
            PlayMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_play, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        PlayMenuLayout.setVerticalGroup(
            PlayMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_play, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        button_play.setText("Play");
        button_play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_playActionPerformed(evt);
            }
        });

        button_leaderboards.setText("Leaderboards");
        button_leaderboards.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_leaderboardsActionPerformed(evt);
            }
        });

        button_options.setText("Options");
        button_options.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_optionsActionPerformed(evt);
            }
        });

        label_title.setText("SuperCheckers!");

        javax.swing.GroupLayout panel_mainLayout = new javax.swing.GroupLayout(panel_main);
        panel_main.setLayout(panel_mainLayout);
        panel_mainLayout.setHorizontalGroup(
            panel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_mainLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(panel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(label_title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button_options, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button_leaderboards, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                    .addComponent(button_play, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        panel_mainLayout.setVerticalGroup(
            panel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_mainLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(label_title)
                .addGap(26, 26, 26)
                .addComponent(button_play)
                .addGap(18, 18, 18)
                .addComponent(button_leaderboards)
                .addGap(18, 18, 18)
                .addComponent(button_options)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel_main, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel_main, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //take user to leaderboard menu, which displays rankings.
    private void button_leaderboardsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_leaderboardsActionPerformed
        //start by populating table
        String[][] data = new String[players.size()][3];
        String[] headers = {"Rank", "Player Name", "Points"};
        String name;
        int rank = 0, points;
        for (Player p : players) {
            name = p.getName();
            points = p.getPoints();
            
            data[rank][0] = "" + (rank + 1);
            data[rank][1] = name;
            data[rank][2] = "" + points;
            
            rank++;
        }
        DefaultTableModel dtm = new DefaultTableModel(data, headers);
        table_leaderboards.setModel(dtm);
        
        //adjust window
        Leaderboards.setSize(408, 300);
        Leaderboards.setMinimumSize(new Dimension(408,300));
        Leaderboards.setVisible(true);
        Leaderboards.setLocation(Toolkit.getDefaultToolkit().getScreenSize().width/3, Toolkit.getDefaultToolkit().getScreenSize().height/3);
        this.setVisible(false);
    }//GEN-LAST:event_button_leaderboardsActionPerformed

    //for debugging leaderboards
    private void fakeData() {
        players.clear();
        Player temp;
        for (int i = 0; i < 10; i++) {
            temp = new HumanPlayer("test" + i, "boop");
            players.add(temp);
        }
    }
    
    //-_-
    private void LeaderboardsWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_LeaderboardsWindowClosed
    }//GEN-LAST:event_LeaderboardsWindowClosed

    //set main window visible after closing leaderboards
    private void LeaderboardsWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_LeaderboardsWindowClosing
        this.setVisible(true);
        this.toFront();
    }//GEN-LAST:event_LeaderboardsWindowClosing

    //save all ranking data to file
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        data2file();
    }//GEN-LAST:event_formWindowClosing

    //-_-
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
    }//GEN-LAST:event_formWindowOpened

    //opens up options menu
    private void button_optionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_optionsActionPerformed
        //adjust window
        Options.setSize(408, 300);
        Options.setVisible(true);
        Options.setLocation(Toolkit.getDefaultToolkit().getScreenSize().width/3, Toolkit.getDefaultToolkit().getScreenSize().height/3);
        Options.setResizable(false);
        this.setVisible(false);
    }//GEN-LAST:event_button_optionsActionPerformed

    //set main window visible after closing options menu
    private void OptionsWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_OptionsWindowClosing
        this.setVisible(true);
        this.toFront();
    }//GEN-LAST:event_OptionsWindowClosing

    //lets user create new player account
    private void button_newPlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_newPlayerActionPerformed
        //opens up signin menu, but disables login button (only sign up available)
        //adjust window
        LoginPage.setSize(408, 300);
        LoginPage.setVisible(true);
        LoginPage.setLocation(100+Toolkit.getDefaultToolkit().getScreenSize().width/3, 100+Toolkit.getDefaultToolkit().getScreenSize().height/3);
        LoginPage.setResizable(false);
        
        loginPurpose = 0;
        
        button_login.setEnabled(false);
        Options.setVisible(false);
    }//GEN-LAST:event_button_newPlayerActionPerformed

    //lets user change their password after logining in
    private void button_changePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_changePasswordActionPerformed
        //opens up signin menu, but disables sign up button (only login available)
        if (!textField_options.getText().isEmpty()) {
            //adjust window
            LoginPage.setSize(408, 300);
            LoginPage.setVisible(true);
            LoginPage.setLocation(100+Toolkit.getDefaultToolkit().getScreenSize().width/3, 100+Toolkit.getDefaultToolkit().getScreenSize().height/3);
            LoginPage.setResizable(false);

            button_signup.setEnabled(false);
            Options.setVisible(false);
            loginPurpose = 2;
        } else {
            JOptionPane.showMessageDialog(Options, "Please enter new password into text field.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_button_changePasswordActionPerformed

    //lets user change their username after logining in
    private void button_changeNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_changeNameActionPerformed
        //opens up signin menu, but disables sign up button (only login available)
        if (!textField_options.getText().isEmpty()) {
            //adjust window
            LoginPage.setSize(408, 300);
            LoginPage.setVisible(true);
            LoginPage.setLocation(100+Toolkit.getDefaultToolkit().getScreenSize().width/3, 100+Toolkit.getDefaultToolkit().getScreenSize().height/3);
            LoginPage.setResizable(false);

            button_signup.setEnabled(false);
            Options.setVisible(false);
            loginPurpose = 1;
        } else {
            JOptionPane.showMessageDialog(Options, "Please enter new username into text field.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_button_changeNameActionPerformed

    //if loginpage is closed, sets any invisible pages to visible (based on loginpurpose)
    private void LoginPageWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_LoginPageWindowClosing
        if (loginPurpose == 0 || loginPurpose == 1 || loginPurpose == 2) {
            Options.setVisible(true);
            Options.toFront();
        }
        else if (loginPurpose == 3 || loginPurpose == 4 || loginPurpose == 5) {
            PlayMenu.setVisible(true);
            PlayMenu.toFront();
        }
        button_login.setEnabled(true);
        button_signup.setEnabled(true);
        label_p2.setVisible(false);
        
        textField_options.setText("");
        
        currentUser = null;
        p2 = null;
    }//GEN-LAST:event_LoginPageWindowClosing

    //adds new player to game, then either returns to previous menu or starts a new game
    private void button_signupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_signupActionPerformed
        //adds inputted player to rankings
        String username = textField_username.getText(), password = textField_password.getText();
        HumanPlayer temp;
        if (!username.isEmpty() && !password.isEmpty()) {
            if (!usernameTaken(username)) {
                temp = new HumanPlayer(username, password);
                players.add(temp);
                     
                if (loginPurpose == 0) {
                    Options.setVisible(true);
                    Options.toFront();
                } else if (loginPurpose == 3) {
                    currentUser = temp;
                    loginPurpose = 5;
                    label_p2.setVisible(true);
                } else if (loginPurpose == 4) {
                    LoginPage.setVisible(false);
                    PlayMenu.setVisible(false);
                    
                    try {
                        play(temp);
                    } catch (InterruptedException ex) {
                        JOptionPane.showMessageDialog(LoginPage, "Error playing game... " + ex.toString(), "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else if (loginPurpose == 5) {
                    p2 = temp;
                    
                    label_p2.setVisible(false);
                    LoginPage.setVisible(false);
                    PlayMenu.setVisible(false);
                    
                    try {
                        play(currentUser, p2);
                    } catch (InterruptedException ex) {
                        JOptionPane.showMessageDialog(LoginPage, "Error playing game... " + ex.toString(), "Error", JOptionPane.ERROR_MESSAGE);
                    }
                    
                    currentUser = null;
                    p2 = null;
                }
                
                button_login.setEnabled(true);
            } else {
                JOptionPane.showMessageDialog(LoginPage, "Inputted username already taken, please enter a different one.", "Error", JOptionPane.ERROR_MESSAGE);
            }
            
            textField_username.setText("");
            textField_password.setText("");
        }
    }//GEN-LAST:event_button_signupActionPerformed

    //logins as a user, then either returns to previous menu or starts a new game TODO: make sure you can't login in as the same person twice!!!
    private void button_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_loginActionPerformed
        //sets inputted user as currentUser
        Player temp;
        String username = textField_username.getText(), password = textField_password.getText();
        if (!username.isEmpty() && !password.isEmpty()) {
            temp = validUser(username, password);
            if (temp != null) {                                
                if (loginPurpose == 1) {
                    currentUser = (HumanPlayer) temp;
                    
                    LoginPage.setVisible(false);
                    currentUser.setName(textField_options.getText());
                    
                    textField_options.setText("");
                    Options.setVisible(true);
                    Options.toFront();
                    currentUser = null;
                } else if (loginPurpose == 2) {
                    currentUser = (HumanPlayer) temp;
                    
                    LoginPage.setVisible(false);
                    currentUser.setPassword(textField_options.getText());
                    
                    textField_options.setText("");
                    Options.setVisible(true);
                    Options.toFront();
                    currentUser = null;
                } else if (loginPurpose == 3) {
                    currentUser = (HumanPlayer) temp;
                    loginPurpose = 5;
                    label_p2.setVisible(true);
                } else if (loginPurpose == 4) {
                    LoginPage.setVisible(false);
                    currentUser = (HumanPlayer) temp;
                    try {
                        play((currentUser));
                    } catch (InterruptedException ex) {
                        JOptionPane.showMessageDialog(LoginPage, "Error playing game... " + ex.toString(), "Error", JOptionPane.ERROR_MESSAGE);
                    }
                    currentUser  = null;
                } else if (loginPurpose == 5) {
                    p2 = (HumanPlayer) temp;
                    
                    label_p2.setVisible(false);
                    LoginPage.setVisible(false);
                    PlayMenu.setVisible(false);
                    
                    try {
                        play(currentUser, p2);
                    } catch (InterruptedException ex) {
                        JOptionPane.showMessageDialog(LoginPage, "Error playing game... " + ex.toString(), "Error", JOptionPane.ERROR_MESSAGE);
                    }
                    
                    currentUser = null;
                    p2 = null;
                }

                button_signup.setEnabled(true);
            }
            else {
                JOptionPane.showMessageDialog(LoginPage, "Inputted user does not exist, try again or create a new user.", "Error", JOptionPane.ERROR_MESSAGE);
            }
            
            textField_username.setText("");
            textField_password.setText("");
        }
        else {
            JOptionPane.showMessageDialog(LoginPage, "Please enter username and password into the respective textfields.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_button_loginActionPerformed

    //opens up play menu, which lets user start a match
    private void button_playActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_playActionPerformed
        //adjust window
        PlayMenu.setSize(408, 300);
        PlayMenu.setVisible(true);
        PlayMenu.setLocation(Toolkit.getDefaultToolkit().getScreenSize().width/3, Toolkit.getDefaultToolkit().getScreenSize().height/3);
        PlayMenu.setResizable(false);
        this.setVisible(false);
    }//GEN-LAST:event_button_playActionPerformed

    //set main window visible after closing play menu
    private void PlayMenuWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_PlayMenuWindowClosing
        //set main window visible
        this.setVisible(true);
        this.toFront();
    }//GEN-LAST:event_PlayMenuWindowClosing

    //starts a match against a computer player
    private void button_comActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_comActionPerformed
            //adjust window
            LoginPage.setSize(408, 300);
            LoginPage.setVisible(true);
            LoginPage.setLocation(100+Toolkit.getDefaultToolkit().getScreenSize().width/3, 100+Toolkit.getDefaultToolkit().getScreenSize().height/3);
            LoginPage.setResizable(false);

            PlayMenu.setVisible(false);
            loginPurpose = 4;
    }//GEN-LAST:event_button_comActionPerformed

    private void button_pvpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_pvpActionPerformed
        //adjust window
        LoginPage.setSize(408, 300);
        LoginPage.setVisible(true);
        LoginPage.setLocation(100+Toolkit.getDefaultToolkit().getScreenSize().width/3, 100+Toolkit.getDefaultToolkit().getScreenSize().height/3);
        LoginPage.setResizable(false);

        PlayMenu.setVisible(false);
        loginPurpose = 3;
    }//GEN-LAST:event_button_pvpActionPerformed

    //confirms that an inputted username and password is correct
    private Player validUser(String user, String pass) {
        HumanPlayer temp;
        for (Player p : players) {
            if (p.getClass() == HumanPlayer.class) {
                temp = (HumanPlayer) p;
                if (temp.getName().equals(user) && temp.getPassword().equals(pass))
                    return p;
            }
        }
        return null;
    }

    //checks if a username has already been taken
    private boolean usernameTaken(String n) {
        for (Player p : players) {
            if (p.getName().equals(n))
                return true;
        }
        return false;
    }
    
    //saves all ranking data to file
    private void data2file() {
        //save all data before closing
        dm = new DataModel(players);
        try {
            FileOutputStream fos = new FileOutputStream(datFile);
            ObjectOutputStream oos;
            oos = new ObjectOutputStream(fos);
            oos.writeObject(dm);
            oos.close();
        } catch (IOException ex) {
            System.out.println(ex.toString());
        }
    }
    
    //pulls ranking data from file
    private void file2data() {
        //load data from dat file
        try {
            FileInputStream fis = new FileInputStream(datFile);
            ObjectInputStream ois = new ObjectInputStream(fis);
            
            dm = (DataModel) ois.readObject();
            
            players = dm.getPlayers();
            
            fis.close();
            ois.close();
        } catch (IOException | ClassNotFoundException ex) {
            System.out.println(ex.toString());
        }
    }
    
    //vs computer
    private void play(HumanPlayer p) throws InterruptedException {
        SuperCheckers.p1 = new ComputerPlayer("test1");
        SuperCheckers.p2 = new ComputerPlayer("test2"); //TODO
    }
    
    //pvp
    private void play(HumanPlayer one, HumanPlayer two) throws InterruptedException {
        SuperCheckers.p1 = one;
        SuperCheckers.p2 = two;
    }
    
    public void updateRankings(Player one, Player two) {
        players.add(one);
        players.add(two);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainMenu().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog Leaderboards;
    private javax.swing.JDialog LoginPage;
    private javax.swing.JDialog Options;
    private javax.swing.JDialog PlayMenu;
    private javax.swing.JButton button_changeName;
    private javax.swing.JButton button_changePassword;
    private javax.swing.JButton button_com;
    private javax.swing.JButton button_leaderboards;
    private javax.swing.JButton button_login;
    private javax.swing.JButton button_newPlayer;
    private javax.swing.JButton button_options;
    private javax.swing.JButton button_play;
    private javax.swing.JButton button_pvp;
    private javax.swing.JButton button_signup;
    private javax.swing.JLabel label_com;
    private javax.swing.JLabel label_help;
    private javax.swing.JLabel label_leaderboards;
    private javax.swing.JLabel label_options;
    private javax.swing.JLabel label_p2;
    private javax.swing.JLabel label_passwordLogin;
    private javax.swing.JLabel label_play;
    private javax.swing.JLabel label_pvp;
    private javax.swing.JLabel label_title;
    private javax.swing.JLabel label_usernameLogin;
    private javax.swing.JPanel panel_leaderboards;
    private javax.swing.JPanel panel_login;
    private javax.swing.JPanel panel_main;
    private javax.swing.JPanel panel_options;
    private javax.swing.JPanel panel_play;
    private javax.swing.JScrollPane scrollPane_leaderboards;
    private javax.swing.JTable table_leaderboards;
    private javax.swing.JTextField textField_options;
    private javax.swing.JTextField textField_password;
    private javax.swing.JTextField textField_username;
    // End of variables declaration//GEN-END:variables
}
